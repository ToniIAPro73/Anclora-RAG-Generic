name: CI - Tests and Linting

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  backend-tests:
    name: Backend - Pytest & Linting
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: anclora_user
          POSTGRES_PASSWORD: anclora_test_pass
          POSTGRES_DB: anclora_rag_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      qdrant:
        image: qdrant/qdrant:v1.7.4
        ports:
          - 6333:6333
        options: >-
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:6333/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: apps/api/requirements.txt

      - name: Install dependencies
        working-directory: ./apps/api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio ruff

      - name: Lint with ruff
        working-directory: ./apps/api
        run: |
          ruff check . --output-format=github
        continue-on-error: true

      - name: Run pytest with coverage
        working-directory: ./apps/api
        env:
          DATABASE_URL: postgresql://anclora_user:anclora_test_pass@localhost:5432/anclora_rag_test
          QDRANT_URL: http://localhost:6333
          REDIS_URL: redis://localhost:6379
          OLLAMA_BASE_URL: http://localhost:11434
          OLLAMA_MODEL: llama3.2:1b
          EMBEDDING_MODEL: nomic-ai/nomic-embed-text-v1.5
          AUTH_BYPASS: true
          APP_ENV: test
          LOG_LEVEL: WARNING
        run: |
          pytest -v --cov=. --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./apps/api/coverage.xml
          flags: backend
          name: backend-coverage
        continue-on-error: true

  frontend-tests:
    name: Frontend - Lint & Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json

      - name: Install dependencies
        working-directory: ./apps/web
        run: npm ci

      - name: Run ESLint
        working-directory: ./apps/web
        run: npm run lint

      - name: Type check with TypeScript
        working-directory: ./apps/web
        run: npx tsc --noEmit
        continue-on-error: true

      - name: Build Next.js
        working-directory: ./apps/web
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: http://localhost:8000

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start services with Docker Compose
        run: |
          docker compose -f infra/docker/docker-compose.dev.yml up -d postgres qdrant redis
          sleep 10

      - name: Health check services
        run: |
          curl --fail http://localhost:6363/health || exit 1
          docker exec $(docker ps -qf "name=postgres") pg_isready || exit 1

      - name: Tear down services
        if: always()
        run: |
          docker compose -f infra/docker/docker-compose.dev.yml down -v
