<#
.SYNOPSIS
    Inicializa la colecci√≥n en Qdrant
#>

$ErrorActionPreference = "Stop"
Write-Host "`nüîß Inicializando colecci√≥n Qdrant..." -ForegroundColor Cyan

# Configuraci√≥n de la colecci√≥n
$collectionConfig = @{
    vectors = @{
        size = 768  # Dimensi√≥n de nomic-embed-text-v1.5
        distance = "Cosine"
    }
} | ConvertTo-Json -Depth 10

try {
    # Crear colecci√≥n
    Write-Host "`nüìä Creando colecci√≥n 'documents'..." -ForegroundColor Yellow
    
    $response = Invoke-WebRequest -Uri "http://localhost:6363/collections/documents" `
        -Method PUT `
        -ContentType "application/json" `
        -Body $collectionConfig `
        -UseBasicParsing
    
    if ($response.StatusCode -eq 200) {
        Write-Host "   ‚úÖ Colecci√≥n creada exitosamente" -ForegroundColor Green
    }
    
} catch {
    if ($_.Exception.Response.StatusCode -eq 409) {
        Write-Host "   ‚ÑπÔ∏è  Colecci√≥n ya existe (normal)" -ForegroundColor DarkGray
    } else {
        throw
    }
}

# Verificar colecci√≥n
Write-Host "`nüîç Verificando colecci√≥n..." -ForegroundColor Yellow

try {
    $verifyResponse = Invoke-WebRequest -Uri "http://localhost:6363/collections/documents" `
        -Method GET -UseBasicParsing
    
    $collection = $verifyResponse.Content | ConvertFrom-Json
    
    Write-Host "   ‚úÖ Colecci√≥n 'documents' configurada" -ForegroundColor Green
    Write-Host "   üìê Dimensi√≥n vectores: $($collection.result.config.params.vectors.size)" -ForegroundColor DarkGray
    Write-Host "   üìè Distancia: $($collection.result.config.params.vectors.distance)" -ForegroundColor DarkGray
    Write-Host "   üìä Puntos actuales: $($collection.result.points_count)" -ForegroundColor DarkGray
    
} catch {
    Write-Host "   ‚ùå Error verificando colecci√≥n: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host "`n‚úÖ Qdrant listo para ingesta" -ForegroundColor Green
Write-Host "üí° Ahora ejecuta: .\test_ingestion.ps1" -ForegroundColor Cyan